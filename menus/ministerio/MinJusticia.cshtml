@using DotNetNuke.Web.DDRMenu;
@using System.Dynamic;
@inherits DotNetNuke.Web.Razor.DotNetNukeWebPage

@{
    var root = Model.Source.root;
}

@functions
{
    public void setCantidadSubMenus(int sub_menu)
    {

        Session["sub-menu"] = sub_menu;
    }

    public int obtenerCantidadSubMenus()
    {
        return Convert.ToInt32(Session["sub-menu"].ToString());
    }
}

<div id="menu-row" class="row align-items-center justify-content-center">
    <div class="col-12">
        <nav id="MinJusticia-menu">
            <label for="tm" id="toggle-menu">Menu<span class="main-label drop-icon">▾</span></label>
            <input type="checkbox" id="tm">
            <ul class="main-menu clearfix">
                @RenderPages(root.Children)
            </ul>
        </nav>
    </div>
</div>

@helper RenderPages(IEnumerable<MenuNode> pages)
{
    if (!pages.Any())
    {
        return;
    }

    setCantidadSubMenus(1);

    foreach (var page in pages)
    {
        var hasChildren = page.HasChildren();

        if (hasChildren)
        {
            var sm = "sm" + obtenerCantidadSubMenus().ToString();
            <li>
                <a href="@page.Url" target="@page.Target">
                    <p class="menu-texto">@page.Text</p>
                    <label title="Toggle Drop-down" class="drop-icon" for="@sm">▾</label>
                </a>
                <input type="checkbox" id="@sm">
                <ul class="sub-menu">
                    @RenderNestedPages(page.Children)
                </ul>
            </li>
        }
        else
        {
            if (page.Enabled)
            {
                <li><a href="@page.Url" target="@page.Target"><p class="menu-texto">@page.Text</p></a></li>
            }
            else
            {
                <li><a href="#" target="@page.Target"><p class="menu-texto">@page.Text</p></a></li>
            }
        }
    }
}

@helper RenderNestedPages(IEnumerable<MenuNode> pages)
{
    setCantidadSubMenus(obtenerCantidadSubMenus() + 1);

    foreach (var page in pages)
    {
        var hasChildren = page.HasChildren();

        if (hasChildren)
        {
            var sm = "sm" + obtenerCantidadSubMenus().ToString();
            <li>
                <div>
                    <a href="@page.Url" target="@page.Target">
                        @page.Text
                        <span class="drop-icon">▾</span>
                        <label title="Toggle Drop-down" class="drop-icon" for="@sm">▾</label>
                    </a>
                    <input type="checkbox" id="@sm">
                    <ul class="sub-menu">
                        @RenderNestedPages(page.Children)
                    </ul>
                </div>
            </li>
        }
        else
        {
            if (page.Enabled)
            {
                <li>
                    <div>
                        <a href="@page.Url" target="@page.Target">@page.Text</a>
                    </div>
                </li>
            }
            else
            {
                <li>
                    <div>
                        <a href="#" target="@page.Target">@page.Text</a>
                    </div>
                </li>
            }
        }
    }
}
